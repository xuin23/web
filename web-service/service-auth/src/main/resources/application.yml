custom:
  host:
    common: com.xuin23.com
    redis: ${custom.host.common}
    database: ${custom.host.common}
    rabbitmq: ${custom.host.common}
    consul: ${custom.host.common}
    logstash: ${custom.host.common}
    elasticsearch: ${custom.host.common}
server:
  port: 8083
  servlet:
    context-path: /@pom.artifactId@
spring:
  application:
    name: @pom.name@
  jackson:
    serialization: { WRITE_DATES_AS_TIMESTAMPS: true }
  datasource:
    url: jdbc:postgresql://${custom.host.database}:5432/postgres
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: 123456
  jpa:
    show-sql: true
    database: postgresql
    hibernate:
      ddl-auto: update
  rabbitmq:
    host: ${custom.host.rabbitmq}
    port: 5672
    username: guest
    password: guest
  elasticsearch:
    uris: http://${custom.host.elasticsearch}:9200
  cloud:
    consul:
      host: ${custom.host.consul}
      port: 8500
      discovery:
        enabled: true  # 启用服务发现
        register: true # 启用服务注册
        deregister: true # 服务停止时取消注册
        prefer-ip-address: true # 表示注册时使用IP而不是hostname
        health-check-interval: 30s # 执行监控检查的频率
        health-check-critical-timeout: 30s # 设置健康检查失败多长时间后，取消注册
        health-check-path: ${server.servlet.context-path}/actuator/info # 健康检查的路径
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port} # 服务注册标识，格式为：应用名称+服务器IP+端口
        service-name: ${spring.application.name} # 注册服务名
  data:
    redis:
      host: ${custom.host.redis}
      database: 0
      port: 6379
management:
  endpoints:
    web:
      exposure:
        include: "*"
logging:
  level:
    com.cloud: debug