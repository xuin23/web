<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.auth.mapper.AuthUserMapper">
    <resultMap id="BaseResultMap" type="com.cloud.auth.entity.AuthUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="optimistic" jdbcType="BIGINT" property="optimistic"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="realname" jdbcType="VARCHAR" property="realname"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, optimistic, username,password, realname, email, status,  update_time, create_time
    </sql>

    <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from web.auth_user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete
        from web.auth_user
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cloud.auth.entity.AuthUser"
            useGeneratedKeys="true">
        insert into web.auth_user (username, password, realname, email, status)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR})
    </insert>

    <update id="updateById" parameterType="com.cloud.auth.entity.AuthUser">
        update web.auth_user
        <set>
            update_time = now(),
            optimistic = optimistic+1,
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="realname != null">
                realname = #{realname,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="findByPageAll" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from web.auth_user
        <where>
            <if test=" params.id != null and  params.id != ''">
                id = cast(#{params.id,jdbcType=BIGINT}as integer )
            </if>
            <if test=" params.username != null and  params.username != ''">
                username = #{params.username,jdbcType=VARCHAR}
            </if>
            <if test=" params.realname != null and  params.realname != ''">
                realname = #{params.realname,jdbcType=VARCHAR}
            </if>
            <if test=" params.email != null and  params.email != ''">
                email = #{params.email,jdbcType=VARCHAR}
            </if>
            <if test=" params.status != null and  params.status != ''">
                status = #{params.status,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="findByUserName" parameterType="string" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from web.auth_user where username= #{username,jdbcType=VARCHAR}
    </select>

    <select id="findByEmail" parameterType="string" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from web.auth_user where email= #{email,jdbcType=VARCHAR}
    </select>
</mapper>