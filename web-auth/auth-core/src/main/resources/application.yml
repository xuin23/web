server:
  port: 8000
  servlet:
    context-path: /@pom.name@
spring:
  application:
    name: @pom.name@
  redis:
    database: 0
    port: 6379
    host: localhost
  datasource:
    url: jdbc:postgresql://localhost:5432/web
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: 123456
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        enabled: true  # 启用服务发现
        register: true # 启用服务注册
        deregister: true # 服务停止时取消注册
        prefer-ip-address: true # 表示注册时使用IP而不是hostname
        health-check-interval: 30s # 执行监控检查的频率
        health-check-critical-timeout: 30s # 设置健康检查失败多长时间后，取消注册
        health-check-path: /@pom.name@/actuator/info # 健康检查的路径
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port} # 服务注册标识，格式为：应用名称+服务器IP+端口
        service-name: ${spring.application.name} # 注册服务名
mybatis:
  type-aliases-package: com.cloud.auth.entity
  mapper-locations: classpath:mapper/*xml
  typeHandlersPackage:
  configuration:
    map-underscore-to-camel-case: true
# 日志配置
logging:
  level:
    com:
      cloud:
        auth:
          mapper: debug
