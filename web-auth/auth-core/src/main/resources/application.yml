server:
  port: 8000
  servlet:
    context-path: /@pom.artifactId@
spring:
  application:
    name: @pom.artifactId@
  #redis 数据源
  redis:
    database: 0
    port: 6379
    host: xuin23.com
    password:
  #postgres数据源
  datasource:
    url: jdbc:postgresql://xuin23.com:5432/postgres?search_path=web
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: 123456
  cloud:
    consul:
      host: xuin23.com
      port: 8500
      discovery:
        # 启用服务发现
        enabled: true
        # 启用服务注册
        register: true
        # 服务停止时取消注册
        deregister: true
        # 表示注册时使用IP而不是hostname
        prefer-ip-address: true
        # 执行监控检查的频率
        health-check-interval: 30s
        # 设置健康检查失败多长时间后，取消注册
        health-check-critical-timeout: 30s
        # 健康检查的路径
        health-check-path: /@pom.artifactId@/actuator/info
        # 服务注册标识，格式为：应用名称+服务器IP+端口
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
        service-name: ${spring.application.name}
#mybatis配置
mybatis:
  type-aliases-package: com.cloud.auth.entity
  mapper-locations: classpath:mapper/*xml
  configuration:
    map-underscore-to-camel-case: true
#日志配置
logging:
  level:
    com:
      cloud:
        auth:
          mapper: debug
